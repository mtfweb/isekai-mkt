<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.goods">

	<!-- 상품 ResultMap -->
	<resultMap id="goodsResult"
		type="com.bookshop01.goods.vo.GoodsVO">
		<result property="goods_id" column="goods_id" />
		<result property="goods_title" column="goods_title" />
		<result property="goods_price" column="goods_price" />
		<result property="goods_sales_price" column="goods_sales_price" />
		<result property="goods_status" column="goods_status" />
		<result property="goods_fileName" column="goods_fileName" />
		<result property="goods_sort" column="goods_sort" />
		<result property="goods_intro" column="goods_intro" />
		<result property="goods_contents_order"
			column="goods_contents_order" javaType="java.lang.String"
			jdbcType="CLOB" />
	</resultMap>

	<!-- 이미지 ResultMap -->
	<resultMap id="imageResult"
		type="com.bookshop01.goods.vo.ImageFileVO">
		<result property="image_id" column="image_id" />
		<result property="goods_id" column="goods_id" />
		<result property="fileName" column="fileName" />
		<result property="fileType" column="fileType" />
		<result property="reg_id" column="reg_id" />
	</resultMap>

	<!-- 상태별 상품 조회 -->
	<select id="selectGoodsListByStatus" resultMap="goodsResult"
		parameterType="string">
		SELECT
		g.goods_id,
		g.goods_title,
		g.goods_sales_price,
		g.goods_status,
		d.fileName AS goods_fileName
		FROM t_shopping_goods g
		LEFT JOIN
		t_goods_detail_image d
		ON g.goods_id = d.goods_id
		AND d.fileType = 'main_image'
		WHERE g.goods_status = #{goods_status}
		ORDER BY g.goods_id DESC
	</select>

	<!-- 상품 상세 조회 -->
	<select id="selectGoodsDetail" resultMap="goodsResult"
		parameterType="long">
		SELECT g.*, d.fileName AS goods_fileName
		FROM t_shopping_goods g
		LEFT JOIN
		t_goods_detail_image d
		ON g.goods_id = d.goods_id
		AND d.fileType = 'main_image'
		WHERE g.goods_id = #{goods_id}
	</select>

	<!-- 상품 이미지 리스트 -->
	<select id="selectGoodsImageFileList" resultMap="imageResult"
		parameterType="long">
		SELECT
		image_id, goods_id, fileName, fileType, reg_id
		FROM t_goods_detail_image
		WHERE goods_id = #{goods_id}
		ORDER BY image_id ASC
	</select>

	<!-- 카테고리 기반 상품 리스트 (하위 포함) -->
	<select id="selectGoodsListByCategory" resultMap="goodsResult"
		parameterType="map">
		SELECT
		g.goods_id,
		g.goods_title,
		g.goods_price,
		g.goods_sales_price,
		g.goods_status,
		d.fileName AS goods_fileName
		FROM t_shopping_goods g
		JOIN t_goods_category_map m ON m.goods_id = g.goods_id
		JOIN t_category c ON c.category_id = m.category_id
		LEFT JOIN t_goods_detail_image d
		ON d.goods_id = g.goods_id
		AND d.fileType = 'main_image'
		WHERE c.path LIKE CONCAT(#{categoryPath}, '%')
		<if test="goods_status != null and goods_status != ''">
			AND g.goods_status = #{goods_status}
		</if>
		ORDER BY g.goods_id DESC
		<if test="limit != null and offset != null">
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

	<!-- 검색어 기반 상품 조회 -->
	<select id="selectGoodsBySearchWord" parameterType="string" resultMap="goodsResult">
	    SELECT
	        g.goods_id,
	        g.goods_title,
	        g.goods_price,
	        g.goods_sales_price,
	        g.goods_status,
	        d.fileName AS goods_fileName
	    FROM t_shopping_goods g
	    LEFT JOIN t_goods_detail_image d
	      ON g.goods_id = d.goods_id
	     AND d.fileType = 'main_image'
	    WHERE g.goods_title LIKE CONCAT('%', #{searchWord}, '%')
	    ORDER BY g.goods_id DESC
	</select>

	<!-- 특정 카테고리의 자식 카테고리 조회 -->
	<select id="selectChildCategories" parameterType="map"
		resultType="map">
		SELECT category_id, parent_id, category_code, category_name,
		       path, depth, sort_order, use_yn
		FROM t_category
		WHERE
		<choose>
			<when test="parentPath != null and parentPath != ''">
				path LIKE CONCAT(#{parentPath}, '/%')
				AND depth = (
					SELECT depth + 1 FROM t_category WHERE path = #{parentPath}
				)
			</when>
			<otherwise>
				depth = 1
			</otherwise>
		</choose>
		AND use_yn = 'Y'
		ORDER BY sort_order ASC, category_name ASC
	</select>

	<!-- 한 상품의 디테일 이미지들 -->
	<select id="selectGoodsDetailImage" resultMap="imageResult"
		parameterType="long">
		SELECT image_id, goods_id, fileName, fileType, reg_id
		FROM t_goods_detail_image
		WHERE goods_id = #{goods_id}
		  AND fileType = 'detail_image'
		ORDER BY image_id ASC
	</select>

	<!-- 카테고리 코드로 단일 카테고리 -->
	<select id="selectCategoryByCode" parameterType="string"
		resultType="map">
		SELECT category_id, parent_id, category_code, category_name,
		       path, depth, sort_order, use_yn
		FROM t_category
		WHERE category_code = #{category_code}
		LIMIT 1
	</select>

	<!-- 상품-카테고리 매핑 존재 여부 -->
	<select id="existsGoodsCategoryMap" parameterType="map"
		resultType="int">
		SELECT COUNT(*)
		FROM t_goods_category_map
		WHERE goods_id = #{goods_id}
		  AND category_id = #{category_id}
	</select>

	<!-- path 또는 code로 카테고리 필터링 -->
	<select id="selectGoodsListByCategoryFlexible"
		resultMap="goodsResult" parameterType="map">
		SELECT g.goods_id, g.goods_title, g.goods_price, g.goods_sales_price,
		       g.goods_status, d.fileName AS goods_fileName
		FROM t_shopping_goods g
		JOIN t_goods_category_map m ON m.goods_id = g.goods_id
		JOIN t_category c ON c.category_id = m.category_id
		LEFT JOIN t_category base ON base.category_code = #{category_code}
		LEFT JOIN t_goods_detail_image d
		  ON d.goods_id = g.goods_id
		 AND d.fileType = 'main_image'
		WHERE 1=1
		<choose>
			<when test="categoryPath != null and categoryPath != ''">
				AND c.path LIKE CONCAT(#{categoryPath}, '%')
			</when>
			<when test="category_code != null and category_code != ''">
				AND base.path IS NOT NULL
				AND c.path LIKE CONCAT(base.path, '%')
			</when>
			<otherwise>
				AND 1=0
			</otherwise>
		</choose>
		<if test="goods_status != null and goods_status != ''">
			AND g.goods_status = #{goods_status}
		</if>
		ORDER BY g.goods_id DESC
		<if test="limit != null and offset != null">
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

	<!-- goods_sort 컬럼으로 분류 -->
	<select id="selectGoodsListBySort" resultMap="goodsResult"
		parameterType="map">
		SELECT g.goods_id, g.goods_title, g.goods_price, g.goods_sales_price,
		       g.goods_status, d.fileName AS goods_fileName
		FROM t_shopping_goods g
		LEFT JOIN t_goods_detail_image d
		  ON d.goods_id = g.goods_id
		 AND d.fileType = 'main_image'
		WHERE 1=1
		<if test="goods_sort != null and goods_sort != ''">
			AND TRIM(g.goods_sort) = TRIM(#{goods_sort})
		</if>
		<if test="goods_status != null and goods_status != ''">
			AND g.goods_status = #{goods_status}
		</if>
		ORDER BY g.goods_id DESC
		<if test="limit != null and offset != null">
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

	<!-- goods_sort IN (...) -->
	<select id="selectGoodsListBySortIn" resultMap="goodsResult"
		parameterType="map">
		SELECT g.goods_id, g.goods_title, g.goods_price, g.goods_sales_price,
		       g.goods_status, d.fileName AS goods_fileName
		FROM t_shopping_goods g
		LEFT JOIN t_goods_detail_image d
		  ON d.goods_id = g.goods_id
		 AND d.fileType = 'main_image'
		WHERE 1=1
		<if test="goodsSortList != null and goodsSortList.size() > 0">
			AND TRIM(g.goods_sort) IN
			<foreach collection="goodsSortList" item="s" open="(" separator="," close=")">
				TRIM(#{s})
			</foreach>
		</if>
		<if test="goods_status != null and goods_status != ''">
			AND g.goods_status = #{goods_status}
		</if>
		ORDER BY g.goods_id DESC
		<if test="limit != null and offset != null">
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

	<!-- 상품-카테고리 매핑 추가 -->
	<insert id="insertGoodsCategoryMap" parameterType="map">
		INSERT IGNORE INTO t_goods_category_map (goods_id, category_id)
		VALUES (#{goods_id}, #{category_id})
	</insert>

	<!-- ===================== -->
	<!-- ✅ 관리자용 추가 기능 -->
	<!-- ===================== -->

	<!-- 상품 삭제 -->
	<delete id="deleteGoods" parameterType="int">
		DELETE FROM t_shopping_goods
		WHERE goods_id = #{goods_id}
	</delete>

	<!-- 상품 상태 변경 -->
	<update id="updateGoodsStatus" parameterType="map">
		UPDATE t_shopping_goods
		SET goods_status = #{status}
		WHERE goods_id = #{goods_id}
	</update>

	<!-- 관리자 검색용 -->
	<select id="searchGoods" parameterType="map" resultMap="goodsResult">
		SELECT g.goods_id, g.goods_title, g.goods_price, g.goods_sales_price,
		       g.goods_status, d.fileName AS goods_fileName
		FROM t_shopping_goods g
		LEFT JOIN t_goods_detail_image d
		  ON g.goods_id = d.goods_id
		 AND d.fileType = 'main_image'
		WHERE 1=1
		<if test="searchWord != null and searchWord != ''">
			AND g.goods_title LIKE CONCAT('%', #{searchWord}, '%')
		</if>
		<if test="goods_status != null and goods_status != ''">
			AND g.goods_status = #{goods_status}
		</if>
		ORDER BY g.goods_id DESC
	</select>

</mapper>
